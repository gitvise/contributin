#!/usr/bin/env node

var pkg = require("./../package");
var args = require("args");
var contributin = require("./../dist").default;

args
  .option(["p", "port"], "Port to listen on [$PORT or 3000]", require("hostenv").PORT || process.env.PORT || 3000)
  .option(["h", "hostname"], "Hostname to listen on [$HOSTNAME or 0.0.0.0]", require("hostenv").HOSTNAME || process.env.WEBSITE_HOSTNAME || "0.0.0.0")
  .option(["P", "path"], "Path to serve contributin under", "/")
  .option(["s", "silent"], "Do not print out warns or errors")
  .option(["x", "cors"], "Enable CORS for all routes")
  .option(["C", "coc"], "Full URL to a CoC that needs to be agreed to")
  .option(["S", "css"], "Full URL to a custom CSS file to use on the main page")
  .option(["?", "help"], "Show the usage information");

var flags = args.parse(process.argv, {
  value: "<repo-name> <api-token>",
  help: false
});

var org = args.sub[0] || process.env.REPO_NAME;
var token = args.sub[1] || process.env.GITHUB_API_TOKEN;

if (flags.help) {
  args.showHelp();
}

if (!org || !token) {
  args.showHelp();
} else {
  flags.org = org;
  flags.token = token;
}

var port = flags.port;
var hostname = flags.hostname;

contributin(flags).listen(port, hostname, function (err) {
  if (err) {
    throw err;
  }
  if (!flags.silent) {
    console.log("%s â€“ listening on %s:%d", new Date(), hostname, port);
  }
});
